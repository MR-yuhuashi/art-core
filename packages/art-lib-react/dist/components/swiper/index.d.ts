import './style.less';
import CoreComponent from '../../core/CoreComponent';
import { ISwiper } from './propstype';
import IScrollProbe from '../scroll/lib/iscroll-probe';
export default class Swiper extends CoreComponent<ISwiper, any> {
    constructor(props: any, context: any);
    private id;
    private is3D;
    private snapStepLast;
    private cloneNum;
    private stopAutoplay;
    private timeout;
    private startX;
    private scrollProbe;
    private scroll;
    private snapStepX;
    static defaultProps: {
        swiperHeight: number;
        gap: number;
        loop: boolean;
        showSpinner: boolean;
        initialSlideIndex: number;
        autoPlayInterval: number;
        slidesPerView: number;
        showPagination: boolean;
        centeredSlides: boolean;
        gradientBackground: never[];
        effect: string;
        coverflowRotate: number;
        coverflowDepth: number;
        coverflowShadow: boolean;
        onTap: (currentPage: any) => void;
        onSwiperChanged: (currentPage: any) => void;
    };
    componentDidMount(): void;
    componentWillReceiveProps(nextProps: any): void;
    private adjustStates;
    private initScroll;
    private clearTimeout;
    private handleTouchStart;
    private handleTouchMove;
    private scrollElem;
    private handleScrollbarInitialize;
    bindScrollEvents(scrollProbe: IScrollProbe): void;
    private updateCurrentPage;
    private initSwiper;
    private autoPlay;
    private create3DStyle;
    private swiperItemClassName;
    private handleSwipeItemTap;
    getStatus: () => {
        currentPage: number;
        pages: any;
    };
    goToPage: (index: any) => void;
    next: () => void;
    prev: () => void;
    setAutoPlay: (autoPlay: boolean) => void;
    render(): any;
}
